
(set-logic  QF_UFBV)
(declare-fun f0 ( (_ BitVec 12) (_ BitVec 5) (_ BitVec 3)) (_ BitVec 5))
(declare-fun f1 ( (_ BitVec 13)) (_ BitVec 11))
(declare-fun p0 ((_ BitVec 14)  ) Bool )
(declare-fun v0 () (_ BitVec 11))
(declare-fun v1 () (_ BitVec 16))
(declare-fun v2 () (_ BitVec 10))
(assert
(let ((e4 (_ bv3685 12)))
(let ((e5 (ite (p0 ((_ sign_extend 3) v0))(_ bv1 1) (_ bv0 1))))
(let ((e6 (f1 ((_ extract 12 0) v1))))
(let ((e7 (f1 ((_ sign_extend 1) e4))))
(let ((e8 (f0 e4 ((_ extract 8 4) v2) ((_ extract 3 1) e7))))
(let ((e9 ((_ extract 6 0) v0)))
(let ((e10 ((_ zero_extend 2) v2)))
(let ((e11 (bvshl e10 ((_ zero_extend 1) e6))))
(let ((e12 ((_ repeat 1) e10)))
(let ((e13 ((_ rotate_right 2) e5)))
(let ((e14 (ite)))
(let ((e15 (( sign_extend 14))))
(let ((e16 (ite)))
(let ((e17 (bvor)))
(let ((e18 (bvxor e11)))
(let ((e19 (ite)))
(let ((e20 (bvugt)))
(let ((e21 (p0)))
(let ((e22 (bvule e16)))
(let ((e23 (distinct)))
(let ((e24 (bvslt)))
(let ((e25 (bvslt e5)))
(let ((e26 (p0)))
(let ((e27 (bvule)))
(let ((e28 (bvule)))
(let ((e29 (bvsle)))
(let ((e30 (bvult e11)))
(let ((e31 (=)))
(let ((e32 (bvslt e13)))
(let ((e33 (bvsgt)))
(let ((e34 (bvsge e4)))
(let ((e35 (bvult)))
(let ((e36 (bvult)))
(let ((e37 (bvsle)))
(let ((e38 (bvsge)))
(let ((e39 (p0)))
(let ((e40 (bvuge)))
(let ((e41 (bvsle)))
(let ((e42 (bvuge)))
(let ((e43 (or e20)))
(let ((e44 (or e27)))
(let ((e45 (ite e23)))
(let ((e46 (=>)))
(let ((e47 (not)))
(let ((e48 (=>)))
(let ((e49 (=>)))
(let ((e50 (= e44)))
(let ((e51 (xor e49)))
(let ((e52 (ite e51)))
(let ((e53 (ite e52)))
(let ((e54 (ite e25)))
(let ((e55 (and e54)))
(let ((e56 (and e55)))
(let ((e57 (not)))
(let ((e58 (not)))
(let ((e59 (and e35)))
(let ((e60 (not)))
(let ((e61 (and e56)))
(let ((e62 (=>)))
(let ((e63 (=>)))
(let ((e64 (and e62)))
(let ((e65 (and e59)))
e65
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))