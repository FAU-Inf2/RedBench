
(set-logic  QF_UFBV)
(declare-fun f0 ( (_ BitVec 12) (_ BitVec 5) (_ BitVec 3)) (_ BitVec 5))
(declare-fun f1 ( (_ BitVec 13)) (_ BitVec 11))
(declare-fun p0 ((_ BitVec 14)  ) Bool )
(declare-fun v0 () (_ BitVec 11))
(declare-fun v1 () (_ BitVec 16))
(declare-fun v2 () (_ BitVec 10))
(assert
(let ((e4 (_ bv3685 12)))
(let ((e5(_ bv1 1)))
(let ((e6 (f1 ((_ extract 12 0) v1))))
(let ((e7 f1))
(let ((e9 v0))
(let ((e10 v2))
(let ((e12 e10))
(let ((e13 ((_ rotate_right 2) e5)))
(let ((e15 e13))
(let ((e17 bvor))
(let ((e19 ite))
(let ((e21 p0))
(let ((e23 distinct))
(let ((e25 bvslt))
(let ((e27 bvule))
(let ((e29 bvsle))
(let ((e31 =))
(let ((e33 bvsgt))
(let ((e35 bvult))
(let ((e37 bvsle))
(let ((e39 p0))
(let ((e41 bvsle))
(let ((e43 or))
(let ((e45 ite))
(let ((e47 e45))
(let ((e49 e22))
(let ((e51 xor))
(let ((e53 ite))
(let ((e55 and))
(let ((e57 e53))
(let ((e59 and))
(let ((e61 and))
(let ((e63 e57))
(let ((e65 and))
e65
)))))))))))))))))))))))))))))))))))