(set-info :source | fuzzsmt 0.3 |)
(set-logic  QF_UFBV)
(set-info :status unknown)
(declare-fun f0 ( (_ BitVec 15) (_ BitVec 15)) (_ BitVec 3))
(declare-fun f1 ( (_ BitVec 14) (_ BitVec 2) (_ BitVec 6)) (_ BitVec 3))
(declare-fun p0 ((_ BitVec 8) (_ BitVec 16) (_ BitVec 11)  ) Bool )
(declare-fun v0 () (_ BitVec 8))
(declare-fun v1 () (_ BitVec 15))
(declare-fun v2 () (_ BitVec 1))
(assert
(let ((e3 (_ bv11484 14)))
(let ((e4 (_ bv3010 14)))
(let ((e5 (bvshl e4 e3)))
(let ((e6 (ite (p0 v0 ((_ zero_extend 1) v1) ((_ zero_extend 3) v0))(_ bv1 1) (_ bv0 1))))
(let ((e7 (bvmul ((_ sign_extend 14) e6) v1)))
(let ((e8 (f1 e4 ((_ extract 4 3) v0) ((_ sign_extend 5) e6))))
(let ((e9 (f1 ((_ extract 14 1) e7) ((_ extract 14 13) e7) ((_ extract 8 3) e5))))
(let ((e10 (bvand v0 ((_ sign_extend 5) e9))))
(let ((e11 (bvudiv ((_ sign_extend 6) v0) e5)))
(let ((e12 ((_ rotate_left 16) v1)))
(let ((e13 (f0 ((_ zero_extend 12) e9) ((_ zero_extend 14) e6))))
(let ((e14 (ite (bvsle ((_ sign_extend 12) e8) e12)(_ bv1 1) (_ bv0 1))))
(let ((e15 ((_ rotate_left 5) e10)))
(let ((e16 (bvudiv ((_ zero_extend 2) e14) e13)))
(let ((e17 (bvnand ((_ sign_extend 12) e13) e7)))
(let ((e18 (bvadd ((_ sign_extend 11) e16) e11)))
(let ((e19 (bvsdiv ((_ zero_extend 7) e15) e12)))
(let ((e20 (bvsub v2 e14)))
(let ((e21 (p0 ((_ extract 7 0) e3) ((_ zero_extend 2) e11) ((_ sign_extend 3) e15))))
(let ((e22 (bvugt e4 e18)))
(let ((e23 (bvugt e12 ((_ zero_extend 14) v2))))
(let ((e24 (bvslt e10 ((_ sign_extend 5) e13))))
(let ((e25 (p0 v0 ((_ zero_extend 13) e13) ((_ zero_extend 10) e20))))
(let ((e26 (bvugt e15 ((_ sign_extend 5) e9))))
(let ((e27 (bvsge e3 ((_ sign_extend 13) e6))))
(let ((e28 (bvsle e12 ((_ zero_extend 12) e9))))
(let ((e29 (distinct ((_ zero_extend 7) e10) e7)))
(let ((e30 (p0 ((_ sign_extend 7) e6) ((_ zero_extend 13) e13) ((_ sign_extend 10) e6))))
(let ((e31 (bvsle e3 ((_ zero_extend 13) v2))))
(let ((e32 (distinct ((_ zero_extend 13) e14) e18)))
(let ((e33 (bvsle e5 ((_ zero_extend 6) e15))))
(let ((e34 (bvsgt e12 ((_ sign_extend 1) e3))))
(let ((e35 (bvult e13 ((_ sign_extend 2) e20))))
(let ((e36 (distinct ((_ zero_extend 12) e8) e17)))
(let ((e37 (distinct e7 e7)))
(let ((e38 (bvslt ((_ zero_extend 14) e20) e17)))
(let ((e39 (= e20 v2)))
(let ((e40 (bvsle v1 ((_ sign_extend 12) e9))))
(let ((e41 (p0 ((_ sign_extend 5) e9) ((_ zero_extend 1) e12) ((_ extract 10 0) e18))))
(let ((e42 (bvule ((_ zero_extend 14) e20) e19)))
(let ((e43 (= ((_ zero_extend 14) e20) e19)))
(let ((e44 (bvuge e10 ((_ zero_extend 5) e9))))
(let ((e45 (bvsle e15 ((_ sign_extend 7) e6))))
(let ((e46 (p0 e10 ((_ zero_extend 8) v0) ((_ sign_extend 8) e8))))
(let ((e47 (bvsgt ((_ zero_extend 14) e6) e12)))
(let ((e48 (bvsle ((_ sign_extend 7) e6) e10)))
(let ((e49 (bvslt e8 ((_ zero_extend 2) v2))))
(let ((e50 (distinct e10 ((_ sign_extend 5) e9))))
(let ((e51 (bvsgt e3 ((_ zero_extend 6) e15))))
(let ((e52 (bvsle ((_ zero_extend 1) e5) e12)))
(let ((e53 (p0 ((_ extract 11 4) e18) ((_ zero_extend 13) e9) ((_ extract 10 0) v1))))
(let ((e54 (bvuge e17 ((_ zero_extend 12) e8))))
(let ((e55 (bvult e18 ((_ sign_extend 11) e9))))
(let ((e56 (bvult e7 ((_ sign_extend 7) e15))))
(let ((e57 (p0 ((_ extract 9 2) e3) ((_ zero_extend 8) e10) ((_ sign_extend 8) e8))))
(let ((e58 (bvsge ((_ zero_extend 1) e18) e17)))
(let ((e59 (distinct e17 ((_ zero_extend 7) v0))))
(let ((e60 (= ((_ zero_extend 14) v2) v1)))
(let ((e61 (bvsge e19 ((_ zero_extend 12) e8))))
(let ((e62 (distinct ((_ zero_extend 2) e14) e8)))
(let ((e63 (bvsle e12 ((_ zero_extend 1) e18))))
(let ((e64 (distinct ((_ zero_extend 6) e10) e4)))
(let ((e65 (= v1 ((_ zero_extend 12) e8))))
(let ((e66 (bvsge e16 e9)))
(let ((e67 (or e38 e65)))
(let ((e68 (or e53 e22)))
(let ((e69 (and e59 e47)))
(let ((e70 (not e30)))
(let ((e71 (or e25 e23)))
(let ((e72 (not e43)))
(let ((e73 (not e40)))
(let ((e74 (= e21 e29)))
(let ((e75 (and e50 e72)))
(let ((e76 (=> e61 e56)))
(let ((e77 (not e62)))
(let ((e78 (or e41 e48)))
(let ((e79 (xor e33 e77)))
(let ((e80 (ite e45 e49 e54)))
(let ((e81 (xor e27 e31)))
(let ((e82 (=> e57 e36)))
(let ((e83 (and e67 e35)))
(let ((e84 (and e52 e44)))
(let ((e85 (xor e69 e80)))
(let ((e86 (and e64 e85)))
(let ((e87 (xor e32 e86)))
(let ((e88 (xor e58 e60)))
(let ((e89 (not e88)))
(let ((e90 (=> e24 e74)))
(let ((e91 (or e51 e84)))
(let ((e92 (and e79 e73)))
(let ((e93 (ite e63 e76 e91)))
(let ((e94 (or e75 e26)))
(let ((e95 (=> e37 e70)))
(let ((e96 (= e34 e34)))
(let ((e97 (xor e68 e68)))
(let ((e98 (or e46 e42)))
(let ((e99 (xor e95 e93)))
(let ((e100 (ite e96 e87 e96)))
(let ((e101 (or e81 e90)))
(let ((e102 (or e94 e55)))
(let ((e103 (not e78)))
(let ((e104 (=> e97 e102)))
(let ((e105 (xor e83 e99)))
(let ((e106 (ite e103 e89 e66)))
(let ((e107 (ite e105 e98 e105)))
(let ((e108 (and e28 e39)))
(let ((e109 (xor e107 e82)))
(let ((e110 (ite e101 e104 e101)))
(let ((e111 (and e71 e106)))
(let ((e112 (xor e109 e92)))
(let ((e113 (not e100)))
(let ((e114 (xor e110 e111)))
(let ((e115 (=> e113 e113)))
(let ((e116 (and e115 e108)))
(let ((e117 (ite e112 e116 e114)))
e117
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
