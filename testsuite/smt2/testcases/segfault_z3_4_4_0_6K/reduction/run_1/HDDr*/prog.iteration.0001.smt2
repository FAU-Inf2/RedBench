
(set-logic a)
(declare-fun a ()a)
(declare-fun f1 () (_ BitVec 5))
(declare-fun p0 (  ) Bool )
(declare-fun a ()a)
(declare-fun v1 () (_ BitVec 10))
(declare-fun v2 () (_ BitVec 4))
(assert
(let ((a 0))
(let ((e4 (_ bv75 8)))
(let ((e5 (f1 ((_ extract 7 0) e4))))
(let ((e6 (f1 ((_ extract 9 0) v1))))
(let ((a 0))
(let ((e8 (ite (bvsgt ((_ zero_extend 0) v2))(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((e10 ((_ repeat 1) e4)))
(let ((a 0))
(let ((a 0))
(let ((e13 (bvcomp e6)))
(let ((e14 (ite (p0 ((_ zero_extend 0) e8))(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e23 (bvurem ((_ sign_extend 0) e10))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e37 (bvslt e10)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e49 (bvule e4)))
(let ((a 0))
(let ((e51 (bvslt e10)))
(let ((e52 (= e14 e13)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e57 (bvsle ((_ zero_extend 0) e5))))
(let ((a 0))
(let ((a 0))
(let ((e60 (bvult ((_ zero_extend 0) e13))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e64 (bvult ((_ zero_extend 3) e13))))
(let ((a 0))
(let ((a 0))
(let ((e67 (bvuge ((_ zero_extend 0) e6))))
(let ((e68 (bvult ((_ sign_extend 3) e13))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e90 (bvuge e23)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e99 (=> e37)))
(let ((a 0))
(let ((e101 (xor e49)))
(let ((a 0))
(let ((a 0))
(let ((e104 (=> e99)))
(let ((a 0))
(let ((e106 (=> e64)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e112 (= e90 e57)))
(let ((a 0))
(let ((e114 (=> e67)))
(let ((a 0))
(let ((e116 (xor e114)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e123 (ite e112 e51 e60)))
(let ((e124 (=> e106)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e128 (=> e68)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e132 (ite e124 e52 e124)))
(let ((a 0))
(let ((e134 (ite e104 e123 e132)))
(let ((e135 (and e134)))
(let ((e136 (=> e128)))
(let ((a 0))
(let ((e138 (=> e135)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e143 (=> e136)))
(let ((a 0))
(let ((a 0))
(let ((e146 (xor e143)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e150 (= e146 e101)))
(let ((a 0))
(let ((e152 (xor e138)))
(let ((a 0))
(let ((e154 (=> e116)))
(let ((a 0))
(let ((a 0))
(let ((e157 (ite e154 e152 e150)))
(let ((a 0))
(let ((e159 (xor e157)))
e159
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)