
(set-logic  QF_AUFBV)
(declare-fun f0 ( (_ BitVec 12) (_ BitVec 5)) (_ BitVec 8))
(declare-fun p0 ((_ BitVec 13) (_ BitVec 12) (_ BitVec 4)  ) Bool )
(declare-fun v0 () (_ BitVec 11))
(declare-fun v1 () (_ BitVec 10))
(declare-fun a2 () (_ BitVec 2))
(declare-fun a3 () (Array (_ BitVec 8) (_ BitVec 6)))
(declare-fun a4 () (Array (_ BitVec 7) (_ BitVec 4)))
(assert
(let ((e5 (_ bv13599 14)))
(let ((e6 (_ bv12 4)))
(let ((e7 (ite (p0 ((_ extract 13 1) e5) ((_ zero_extend 1) v0) e6)(_ bv1 1) (_ bv0 1))))
(let ((e8 (f0 ((_ sign_extend 2) v1) ((_ sign_extend 1) e6))))
(let ((e9 a3))
(let ((e11 (select a4 ((_ extract 7 1) v1))))
(let ((e14 (f0 ((_ zero_extend 2) v1) ((_ sign_extend 1) e6))))
(let ((e15 e5))
(let ((e16 (ite (p0 ((_ zero_extend 2) v0) ((_ sign_extend 8) e11) ((_ extract 5 2) e5))(_ bv1 1) (_ bv0 1))))
(let ((e17 1))
(let ((e18 1))
(let ((e19 e11))
(let ((e20 e5))
(let ((e21 e14)) (bvuge e7 e16))))))))))))))))
(check-sat)