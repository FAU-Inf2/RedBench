
(set-logic  QF_AUFBV)
(declare-fun p0 ((_ BitVec 3) (_ BitVec 4) (_ BitVec 2)  ) Bool )
(declare-fun p1 ((_ BitVec 4) (_ BitVec 10) (_ BitVec 2)  ) Bool )
(declare-fun v0 () (_ BitVec 8))
(declare-fun v1 () (_ BitVec 10))
(declare-fun v2 () (_ BitVec 10))
(declare-fun a3 () (Array (_ BitVec 5) (_ BitVec 16)))
(assert
(let ((e4 9))
(let ((e5 (_ bv1 1)))
(let ((e6(_ bv1 1)))
(let ((e7(_ bv1 1)))
(let ((e8 v1))
(let ((e9(_ bv1 1)))
(let ((e10 v0))
(let ((e11 (ite (p1 ((_ extract 9 6) v2) v2 ((_ extract 2 1) v2))(_ bv1 1) (_ bv0 1))))
(let ((e12 (select a3 ((_ extract 7 3) e8))))
(let ((e13 (select a3 ((_ zero_extend 4) e9))))
(let ((e14 e4))
(let ((e15(_ bv1 1)))
(let ((e16 e10))
(let ((e17 (ite (p1 ((_ extract 15 12) e12) ((_ zero_extend 2) e16) ((_ sign_extend 1) e9))(_ bv1 1) (_ bv0 1))))
(let ((e18 (bvcomp e8 ((_ zero_extend 9) e15))))
(let ((e19 e13))
(let ((e20 v2))
(let ((e21 e5))
(let ((e22 v1))
(let ((e23 e20))
(let ((e24 v2))
(let ((e25 (bvslt e21 e7)))
(let ((e26 (bvult ((_ sign_extend 7) e18) e10)))
(let ((e27 e19))
(let ((e28 (distinct e11 e17)))
(let ((e29 e13))
(let ((e30 (bvult e13 ((_ zero_extend 6) e8))))
(let ((e31 e12))
(let ((e32 v2))
(let ((e33 e13))
(let ((e34 (bvule e5 e15)))
(let ((e35 e19))
(let ((e36 e16))
(let ((e37 (bvugt e6 e11)))
(let ((e38 e19))
(let ((e39 e14))
(let ((e40 e7))
(let ((e41 e13))
(let ((e42 e22))
(let ((e43 (p0 ((_ extract 6 4) e16) ((_ zero_extend 3) e15) ((_ zero_extend 1) e17))))
(let ((e44 e14))
(let ((e45 e4))
(let ((e46 e25))
(let ((e47 e43)) (ite e37 e34 e28))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)