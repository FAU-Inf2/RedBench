
(set-logic  QF_AUFBV)
(declare-fun f0 () (_ BitVec 7))
(declare-fun p0 ((_ BitVec 13) (_ BitVec 6)  ) Bool )
(declare-fun v0 () (_ BitVec 15))
(declare-fun a1 () (Array (_ BitVec 5) (_ BitVec 16)))
(assert
(let ((e2 (_ bv1 1)))
(let ((e3 (_ bv23 7)))
(let ((e4 (bvnand e2 e2)))
(let ((e5 1))
(let ((e7 (ite (p0 ((_ zero_extend 6) e3) ((_ sign_extend 5) e2))(_ bv1 1) (_ bv0 1))))
(let ((e8 e4))
(let ((e9 e4))
(let ((e10 e9))
(let ((e11 e7))
(let ((e12 v0))
(let ((e13 a1))
(let ((e14 e13))
(let ((e16 e10))
(let ((e19 e2))
(let ((e20 (bvnot e11)))
(let ((e24 (bvcomp e8 e20)))
(let ((e26 e7)) (= e19 e24)))))))))))))))))))
(check-sat)