
(set-logic  QF_AUFBV)
(declare-fun v0 () (_ BitVec 15))
(declare-fun v1 () (_ BitVec 11))
(declare-fun v2 () (_ BitVec 5))
(declare-fun v3 () (_ BitVec 15))
(declare-fun a4 () (Array (_ BitVec 14) (_ BitVec 6)))
(declare-fun a5 () (Array (_ BitVec 5) (_ BitVec 11)))
(assert
(let ((e6 (_ bv246 9)))
(let ((e7 (bvsrem ((_ sign_extend 10) v2) v0)))
(let ((e8 (ite (bvsle v3 e7)(_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (bvugt v1 v1)(_ bv1 1) (_ bv0 1))))
(let ((e10 (bvshl ((_ zero_extend 14) e8) e7)))
(let ((e11 (bvsub e9 e9)))
(let ((e12 (bvadd e9 e8)))
(let ((e13 (bvnot e8)))
(let ((e14 (ite (bvule ((_ sign_extend 6) e6) v0)(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((e16 (store a5 ((_ sign_extend 4) e11) ((_ sign_extend 10) e8))))
(let ((e17 (select a4 ((_ extract 14 1) v3))))
(let ((a 0))
(let ((e19 (select e16 ((_ zero_extend 4) e13))))
(let ((e20 (bvcomp v2 ((_ sign_extend 4) e9))))
(let ((e21 (bvnot e8)))
(let ((e22 (bvadd e7 e7)))
(let ((e23 (bvsmod ((_ zero_extend 4) e19) e22)))
(let ((e24 (bvor v1 ((_ zero_extend 6) v2))))
(let ((e25 ((_ extract 12 8) e10)))
(let ((e26 ((_ rotate_left 0) e8)))
(let ((e27 (bvcomp e21 e11)))
(let ((e28 (ite (bvuge v3 e23)(_ bv1 1) (_ bv0 1))))
(let ((e29 (bvsmod ((_ zero_extend 14) e14) v0)))
(let ((e30 (bvnand e26 e13)))
(let ((e31 (ite (= (_ bv1 1) ((_ extract 3 3) e6)) e17 e17)))
(let ((e32 (bvshl ((_ zero_extend 14) e12) e22)))
(let ((e33 (bvsle ((_ zero_extend 9) e31) e7)))
(let ((e34 (bvslt e22 ((_ zero_extend 14) e14))))
(let ((e35 (bvsle v0 e22)))
(let ((e36 (bvsgt ((_ sign_extend 10) e20) e24)))
(let ((e37 (bvsgt e13 e11)))
(let ((e38 (bvuge ((_ zero_extend 14) e21) v3)))
(let ((e39 (= e7 ((_ zero_extend 9) e31))))
(let ((e40 (bvsge ((_ sign_extend 5) e28) e17)))
(let ((a 0))
(let ((e42 (bvslt e12 e28)))
(let ((e43 (distinct e9 e30)))
(let ((e44 (bvsle e7 ((_ zero_extend 14) e8))))
(let ((e45 (bvuge e29 ((_ sign_extend 14) e12))))
(let ((e46 (bvule e29 e23)))
(let ((e47 (bvsge v3 ((_ zero_extend 10) e25))))
(let ((e48 (= v1 ((_ sign_extend 10) e21))))
(let ((e49 (distinct e23 ((_ sign_extend 4) v1))))
(let ((a 0))
(let ((e51 (bvsgt ((_ sign_extend 6) e6) v0)))
(let ((a 0))
(let ((e53 (bvult e30 e20)))
(let ((e54 (bvsgt e22 ((_ zero_extend 10) e25))))
(let ((a 0))
(let ((e56 (bvuge ((_ zero_extend 14) e9) e23)))
(let ((e57 (bvsgt e13 e26)))
(let ((e58 (bvult v2 ((_ sign_extend 4) e28))))
(let ((e59 (bvugt e24 ((_ zero_extend 10) e27))))
(let ((e60 (bvule e20 e14)))
(let ((e61 (bvule v0 ((_ sign_extend 6) e6))))
(let ((e62 (bvsgt e28 e11)))
(let ((e63 (bvslt e20 e8)))
(let ((e64 (bvslt ((_ sign_extend 10) e25) v0)))
(let ((a 0))
(let ((e66 (bvsge ((_ zero_extend 14) e28) e32)))
(let ((a 0))
(let ((e68 (= v2 ((_ sign_extend 4) e21))))
(let ((e69 (bvsle e12 e28)))
(let ((e70 (bvugt ((_ sign_extend 14) e26) e29)))
(let ((e71 (bvugt e24 e19)))
(let ((e72 (not e51)))
(let ((e73 (not e45)))
(let ((e74 (not e56)))
(let ((a 0))
(let ((e76 (or e44)))
(let ((e77 (xor e33 e36)))
(let ((e78 (=> e74 e47)))
(let ((e79 (and e57)))
(let ((e80 (not e48)))
(let ((a 0))
(let ((a 0))
(let ((e83 (ite e37 e71 e72)))
(let ((e84 (xor e77 e64)))
(let ((e85 (=> e38 e61)))
(let ((a 0))
(let ((e87 (not e58)))
(let ((e88 (or e73)))
(let ((e89 (or e78)))
(let ((e90 (not e87)))
(let ((e91 (xor e84 e53)))
(let ((a 0))
(let ((e93 (not e83)))
(let ((e94 (not e93)))
(let ((e95 (and e40)))
(let ((e96 (xor e80 e76)))
(let ((e97 (or e63)))
(let ((e98 (not e39)))
(let ((e99 (and e62)))
(let ((e100 (xor e85 e43)))
(let ((e101 (ite e35 e95 e97)))
(let ((e102 (ite e101 e88 e96)))
(let ((e103 (= e98 e102)))
(let ((e104 (not e54)))
(let ((e105 (ite e94 e100 e100)))
(let ((e106 (ite e105 e42 e49)))
(let ((a 0))
(let ((e108 (ite e99 e104 e34)))
(let ((e109 (and e103)))
(let ((a 0))
(let ((e111 (ite e109 e109 e79)))
(let ((e112 (=> e108 e111)))
(let ((a 0))
(let ((a 0))
(let ((e115 (and e59)))
(let ((e116 (ite e89 e89 e112)))
(let ((e117 (=> e116 e115)))
(let ((e118 (not e117)))
(let ((e119 (or e118)))
(let ((e120 (and e119)))
(let ((e121 (and e120)))
(let ((e122 (and e121)))
(let ((e123 (and e122)))
e123
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)