
(set-logic  QF_AUFBV)
(declare-fun f0 ( (_ BitVec 3)) (_ BitVec 13))
(declare-fun p0 ((_ BitVec 8) (_ BitVec 3)  ) Bool )
(declare-fun p1 ((_ BitVec 5) (_ BitVec 3) (_ BitVec 12)  ) Bool )
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 1))
(declare-fun a4 () (Array (_ BitVec 15) (_ BitVec 10)))
(assert
(let ((e5 (_ bv0 1)))
(let ((e6 (_ bv373 9)))
(let ((e7(_ bv1 1)))
(let ((e8 (_ bv0 1)))
(let ((e9 e6))
(let ((e10(_ bv1 1)))
(let ((e11(_ bv1 1)))
(let ((e12 e5))
(let ((e13 v3))
(let ((e14 (f0 ((_ sign_extend 2) e8))))
(let ((e15 a4))
(let ((e16 (select a4 ((_ zero_extend 14) e12))))
(let ((e17 (select a4 ((_ zero_extend 1) v2))))
(let ((e18 (select e15 ((_ sign_extend 14) e5))))
(let ((e19 (select e15 ((_ sign_extend 5) e17))))
(let ((e20 (select e15 ((_ sign_extend 14) e12))))
(let ((e21 (f0 ((_ extract 8 6) e18))))
(let ((e22 (ite (p0 ((_ extract 8 1) e9) ((_ zero_extend 2) e11))(_ bv1 1) (_ bv0 1))))
(let ((e23 e14))
(let ((e24(_ bv1 1)))
(let ((e25 (bvnor e8 e22)))
(let ((e26 e11))
(let ((e27(_ bv1 1)))
(let ((e28(_ bv1 1)))
(let ((e29(_ bv1 1)))
(let ((e30(_ bv1 1)))
(let ((e31(_ bv1 1)))
(let ((e32 e19))
(let ((e33 ((_ sign_extend 0) e5)))
(let ((e34 e16))
(let ((e35 (bvcomp e33 e25)))
(let ((e36 v0))
(let ((e37 ((_ zero_extend 2) e33)))
(let ((e39 ((_ zero_extend 2) e13)))
(let ((e40 v3))
(let ((e42 v1))
(let ((e43 e26))
(let ((e44 e6))
(let ((e46 ((_ zero_extend 4) e10)))
(let ((e48 e6))
(let ((e50 e7))
(let ((e52 e36))
(let ((e53 e36))
(let ((e55 e28))
(let ((e56 v3))
(let ((e58 e10))
(let ((e59 e21))
(let ((e60 e21))
(let ((e61 e30))
(let ((e62 ((_ extract 7 0) e6)))
(let ((e64 e23))
(let ((e65 e13))
(let ((e66 e25))
(let ((e68 ((_ zero_extend 7) e27)))
(let ((e69 e32))
(let ((e70 v1))
(let ((e71 e22))
(let ((e73 ((_ sign_extend 4) e30)))
(let ((e74 v0))
(let ((e75 v1))
(let ((e76 e14))
(let ((e78 e23))
(let ((e80 e11))
(let ((e81 e34))
(let ((e82 (bvult e28 e35)))
(let ((e84 e25))
(let ((e86 e17))
(let ((e88 e12))
(let ((e90 e19))
(let ((e92 e19))
(let ((e94 e16))
(let ((e96 e65))
(let ((e98 e43))
(let ((e100 e81))
(let ((e102 e37))
(let ((e103 e82))
(let ((e105 e75))
(let ((e107 e40))
(let ((e108 e88))
(let ((e109 e107))
(let ((e110 e59))
(let ((e112 e56))
(let ((e113 e84))
(let ((e115 e108))
(let ((e117 e105))
(let ((e119 e102))
(let ((e120 e80))
(let ((e122 e120))
(let ((e123 e113))
(let ((e125 e112))
(let ((e127 e61))
(let ((e129 e71))
(let ((e130 e129))
(let ((e132 e48))
(let ((e134 e92))
(let ((e135 e119))
(let ((e137 e135))
(let ((e138 e103))
(let ((e140 e132))
(let ((e141 e123))
(let ((e142 e138))
(let ((e143 e137))
(let ((e145 e140))
(let ((e146 e142))
(let ((e147 e146))
(let ((e148 e147))
(let ((e149 e148))
(let ((e150 e149))
(let ((e151 e125))
(let ((e152 e150))
(let ((e153 e151))
(let ((e155 e153))
(let ((e156 e152))
(let ((e157 e156))
(let ((e158 e157))
e158
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)