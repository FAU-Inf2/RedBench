
(set-logic  QF_AUFBV)
(declare-fun f0 ( (_ BitVec 3)) (_ BitVec 13))
(declare-fun p0 ((_ BitVec 8) (_ BitVec 3)  ) Bool )
(declare-fun p1 ((_ BitVec 5) (_ BitVec 3) (_ BitVec 12)  ) Bool )
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 1))
(declare-fun a4 () (Array (_ BitVec 15) (_ BitVec 10)))
(assert
(let ((e5 (_ bv0 1)))
(let ((e6 (_ bv373 9)))
(let ((e7 (ite (p0 ((_ sign_extend 7) v3) ((_ extract 2 0) v1))(_ bv1 1) (_ bv0 1))))
(let ((e8 (ite (p1 ((_ extract 9 5) v0) ((_ extract 2 0) v1) ((_ zero_extend 11) v3))(_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (= (_ bv1 1) ((_ extract 10 10) v2)) e6 ((_ zero_extend 2) v1))))
(let ((e10 (ite (bvule v1 ((_ zero_extend 6) v3))(_ bv1 1) (_ bv0 1))))
(let ((e11 (ite (bvugt ((_ sign_extend 13) e5) v2)(_ bv1 1) (_ bv0 1))))
(let ((e12 (bvxnor e5 e7)))
(let ((e13 (bvnor v3 e11)))
(let ((e14 (f0 ((_ sign_extend 2) e8))))
(let ((e15 (store a4 ((_ sign_extend 1) v2) ((_ sign_extend 9) e10))))
(let ((e16 (select a4 ((_ zero_extend 14) e12))))
(let ((e17 (select a4 ((_ zero_extend 1) v2))))
(let ((a 0))
(let ((e19 (select e15 ((_ sign_extend 5) e17))))
(let ((a 0))
(let ((a 0))
(let ((e22 (ite (p0 ((_ extract 8 1) e9) ((_ zero_extend 2) e11))(_ bv1 1) (_ bv0 1))))
(let ((e23 (bvsmod ((_ zero_extend 12) e10) e14)))
(let ((e24 (ite (p1 ((_ extract 10 6) v0) ((_ sign_extend 2) e13) ((_ sign_extend 11) v3))(_ bv1 1) (_ bv0 1))))
(let ((e25 (bvnor e8 e22)))
(let ((e26 (bvshl e11 e11)))
(let ((e27 (ite (bvsle e17 ((_ zero_extend 9) e24))(_ bv1 1) (_ bv0 1))))
(let ((e28 (ite (bvslt v2 ((_ sign_extend 13) e22))(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((e30 (ite (bvsge ((_ sign_extend 8) e13) e6)(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((e32 (ite (= (_ bv1 1) ((_ extract 0 0) e12)) ((_ sign_extend 3) v1) e19)))
(let ((e33 ((_ sign_extend 0) e5)))
(let ((e34 (bvor e16 ((_ zero_extend 9) e26))))
(let ((e35 (bvcomp e33 e25)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e39 (p0 ((_ extract 7 0) e34) ((_ zero_extend 2) e13))))
(let ((a 0))
(let ((a 0))
(let ((e42 (bvslt ((_ sign_extend 6) e12) v1)))
(let ((a 0))
(let ((e44 (bvugt ((_ zero_extend 8) e12) e6)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e64 (bvult e23 ((_ zero_extend 3) e19))))
(let ((a 0))
(let ((e66 (bvule e25 e27)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e70 (bvugt v1 ((_ zero_extend 6) e35))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e75 (bvuge v1 ((_ zero_extend 6) e11))))
(let ((e76 (= ((_ zero_extend 12) e24) e14)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e83 (bvule e14 ((_ sign_extend 3) e32))))
(let ((a 0))
(let ((e85 (bvule ((_ zero_extend 9) e28) e34)))
(let ((e86 (bvuge ((_ sign_extend 1) e6) e17)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e91 (bvugt e10 e30)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e99 (xor e76 e91)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e104 (=> e70 e64)))
(let ((e105 (xor e75 e85)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e111 (= e66 e86)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e117 (=> e105 e42)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e129 (or e104)))
(let ((e130 (= e129 e99)))
(let ((e131 (xor e44 e83)))
(let ((a 0))
(let ((e133 (not e130)))
(let ((a 0))
(let ((e135 (or e133)))
(let ((a 0))
(let ((e137 (xor e135 e39)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e143 (xor e137 e131)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e151 (and e111)))
(let ((a 0))
(let ((e153 (xor e151 e117)))
(let ((e154 (=> e143 e143)))
(let ((e155 (xor e153 e154)))
(let ((e156 (or e155)))
(let ((e157 (and e156)))
(let ((e158 (and e157)))
e158
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)