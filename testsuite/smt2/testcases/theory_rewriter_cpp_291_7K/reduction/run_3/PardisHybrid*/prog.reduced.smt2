
(set-logic  QF_AUFBV)
(declare-fun f0 ( (_ BitVec 3)) (_ BitVec 13))
(declare-fun p0 ((_ BitVec 8) (_ BitVec 3)  ) Bool )
(declare-fun p1 ((_ BitVec 5) (_ BitVec 3) (_ BitVec 12)  ) Bool )
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 1))
(declare-fun a4 () (Array (_ BitVec 15) (_ BitVec 10)))
(assert
(let ((e5 (_ bv0 1)))
(let ((e6 (_ bv373 9)))
(let ((e7 (ite (p0 ((_ sign_extend 7) v3) ((_ extract 2 0) v1))(_ bv1 1) (_ bv0 1))))
(let ((e8 (ite (p1 ((_ extract 9 5) v0) ((_ extract 2 0) v1) ((_ zero_extend 11) v3))(_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (= (_ bv1 1) ((_ extract 10 10) v2)) e6 ((_ zero_extend 2) v1))))
(let ((e10 (ite (bvule v1 ((_ zero_extend 6) v3))(_ bv1 1) (_ bv0 1))))
(let ((e11 (ite (bvugt ((_ sign_extend 13) e5) v2)(_ bv1 1) (_ bv0 1))))
(let ((e12 (bvxnor e5 e7)))
(let ((e13 (bvnor v3 e11)))
(let ((e14 (f0 ((_ sign_extend 2) e8))))
(let ((e15 (store a4 ((_ sign_extend 1) v2) ((_ sign_extend 9) e10))))
(let ((e16 (select a4 ((_ zero_extend 14) e12))))
(let ((e17 (select a4 ((_ zero_extend 1) v2))))
(let ((e18 (select e15 ((_ sign_extend 14) e5))))
(let ((e19 (select e15 ((_ sign_extend 5) e17))))
(let ((e20 (select e15 ((_ sign_extend 14) e12))))
(let ((e21 (f0 ((_ extract 8 6) e18))))
(let ((e22 (ite (p0 ((_ extract 8 1) e9) ((_ zero_extend 2) e11))(_ bv1 1) (_ bv0 1))))
(let ((e23 (bvsmod ((_ zero_extend 12) e10) e14)))
(let ((e24 (ite (p1 ((_ extract 10 6) v0) ((_ sign_extend 2) e13) ((_ sign_extend 11) v3))(_ bv1 1) (_ bv0 1))))
(let ((e25 (bvnor e8 e22)))
(let ((e26 (bvshl e11 e11)))
(let ((e27 (ite (bvsle e17 ((_ zero_extend 9) e24))(_ bv1 1) (_ bv0 1))))
(let ((e28 (ite (bvslt v2 ((_ sign_extend 13) e22))(_ bv1 1) (_ bv0 1))))
(let ((e29 (ite (bvsgt e7 e25)(_ bv1 1) (_ bv0 1))))
(let ((e30 (ite (bvsge ((_ sign_extend 8) e13) e6)(_ bv1 1) (_ bv0 1))))
(let ((e31 (ite (p0 ((_ zero_extend 7) e12) ((_ zero_extend 2) e28))(_ bv1 1) (_ bv0 1))))
(let ((e32 (ite (= (_ bv1 1) ((_ extract 0 0) e12)) ((_ sign_extend 3) v1) e19)))
(let ((e33 ((_ sign_extend 0) e5)))
(let ((e34 (bvor e16 ((_ zero_extend 9) e26))))
(let ((e35 (bvcomp e33 e25)))
(let ((e36 (bvnor ((_ sign_extend 3) e20) v0)))
(let ((e37 (p1 ((_ extract 8 4) v0) ((_ zero_extend 2) e33) ((_ sign_extend 11) e33))))
(let ((e38 (distinct e34 ((_ zero_extend 9) e33))))
(let ((e39 (p0 ((_ extract 7 0) e34) ((_ zero_extend 2) e13))))
(let ((e40 (bvule v3 v3)))
(let ((e41 (bvult e21 ((_ sign_extend 12) e13))))
(let ((e42 (bvslt ((_ sign_extend 6) e12) v1)))
(let ((e43 (bvsgt e26 e10)))
(let ((e44 (bvugt ((_ zero_extend 8) e12) e6)))
(let ((e45 (bvuge e7 e8)))
(let ((e46 (p1 ((_ zero_extend 4) e10) ((_ extract 7 5) e21) ((_ zero_extend 2) e18))))
(let ((e47 (bvsgt ((_ zero_extend 8) e26) e9)))
(let ((e48 (bvult e6 ((_ sign_extend 8) e30))))
(let ((e49 (bvsle e20 ((_ zero_extend 9) e11))))
(let ((e50 (= e7 e22)))
(let ((e51 (p1 ((_ zero_extend 4) e30) ((_ extract 3 1) e18) ((_ zero_extend 11) e8))))
(let ((e52 (bvule e36 ((_ sign_extend 3) e34))))
(let ((e53 (bvsle e36 ((_ sign_extend 4) e6))))
(let ((e54 (p1 ((_ extract 12 8) e23) ((_ extract 3 1) e9) ((_ zero_extend 11) e33))))
(let ((e55 (distinct e28 e27)))
(let ((e56 (bvugt v3 e31)))
(let ((e57 (bvslt v2 ((_ zero_extend 13) e33))))
(let ((e58 (bvsle e10 e35)))
(let ((e59 (bvslt e21 ((_ zero_extend 12) e31))))
(let ((e60 (bvsgt ((_ zero_extend 12) e5) e21)))
(let ((e61 (distinct e30 e22)))
(let ((e62 (p0 ((_ extract 7 0) e6) ((_ extract 8 6) e20))))
(let ((e63 (bvsle e23 ((_ zero_extend 12) v3))))
(let ((e64 (bvult e23 ((_ zero_extend 3) e19))))
(let ((e65 (bvult e13 e30)))
(let ((e66 (bvule e25 e27)))
(let ((e67 (bvule e14 ((_ sign_extend 12) e28))))
(let ((e68 (p0 ((_ zero_extend 7) e27) ((_ zero_extend 2) e10))))
(let ((e69 (bvslt e32 ((_ sign_extend 9) e12))))
(let ((e70 (bvugt v1 ((_ zero_extend 6) e35))))
(let ((e71 (bvsge e22 e35)))
(let ((e72 (bvslt e34 ((_ zero_extend 9) e35))))
(let ((e73 (p1 ((_ sign_extend 4) e30) ((_ zero_extend 2) e10) ((_ zero_extend 2) e16))))
(let ((e74 (bvsle v0 ((_ sign_extend 4) e9))))
(let ((e75 (bvuge v1 ((_ zero_extend 6) e11))))
(let ((e76 (= ((_ zero_extend 12) e24) e14)))
(let ((e77 (= v1 ((_ sign_extend 6) e22))))
(let ((e78 (bvugt e23 ((_ zero_extend 3) e20))))
(let ((e79 (bvuge ((_ sign_extend 4) e9) e36)))
(let ((e80 (bvugt e11 e8)))
(let ((e81 (bvslt e34 ((_ sign_extend 3) v1))))
(let ((e82 (bvult e28 e35)))
(let ((e83 (bvule e14 ((_ sign_extend 3) e32))))
(let ((e84 (bvsge e25 v3)))
(let ((e85 (bvule ((_ zero_extend 9) e28) e34)))
(let ((e86 (bvuge ((_ sign_extend 1) e6) e17)))
(let ((e87 (bvule e35 e13)))
(let ((e88 (bvsge e12 e12)))
(let ((e89 (p0 ((_ sign_extend 1) v1) ((_ sign_extend 2) e28))))
(let ((e90 (bvugt ((_ sign_extend 9) e22) e19)))
(let ((e91 (bvugt e10 e30)))
(let ((e92 (bvuge ((_ sign_extend 9) e10) e19)))
(let ((e93 (= e19 ((_ sign_extend 9) e5))))
(let ((e94 (bvsle ((_ sign_extend 1) e6) e16)))
(let ((e95 (= e35 e29)))
(let ((e96 (and e51)))
(let ((e97 (= e50 e89)))
(let ((e98 (xor e43 e58)))
(let ((e99 (xor e76 e91)))
(let ((e100 (=> e81 e55)))
(let ((e101 (xor e52 e73)))
(let ((e102 (= e37 e49)))
(let ((e103 (ite e82 e96 e46)))
(let ((e104 (=> e70 e64)))
(let ((e105 (xor e75 e85)))
(let ((e106 (=> e74 e87)))
(let ((e107 (not e40)))
(let ((e108 (=> e88 e78)))
(let ((e109 (or e41)))
(let ((e110 (and e63)))
(let ((e111 (= e66 e86)))
(let ((e112 (=> e56 e45)))
(let ((e113 (or e97)))
(let ((e114 (xor e62 e67)))
(let ((e115 (=> e108 e79)))
(let ((e116 (= e109 e77)))
(let ((e117 (=> e105 e42)))
(let ((e118 (and e47)))
(let ((e119 (xor e102 e90)))
(let ((e120 (xor e80 e106)))
(let ((e121 (=> e53 e100)))
(let ((e122 (xor e120 e116)))
(let ((e123 (= e113 e54)))
(let ((e124 (or e38)))
(let ((e125 (or e72)))
(let ((e126 (=> e115 e122)))
(let ((e127 (or e121)))
(let ((e128 (and e57)))
(let ((e129 (or e104)))
(let ((e130 (= e129 e99)))
(let ((e131 (xor e44 e83)))
(let ((e132 (or e68)))
(let ((e133 (not e130)))
(let ((e134 (and e118)))
(let ((e135 (or e133)))
(let ((e136 (xor e127 e128)))
(let ((e137 (xor e135 e39)))
(let ((e138 (xor e114 e103)))
(let ((e139 (= e98 e136)))
(let ((e140 (= e132 e95)))
(let ((e141 (xor e123 e94)))
(let ((e142 (= e138 e139)))
(let ((e143 (xor e137 e131)))
(let ((e144 (and e124)))
(let ((e145 (xor e140 e144)))
(let ((e146 (or e142)))
(let ((e147 (and e126)))
(let ((e148 (or e101)))
(let ((e149 (or e148)))
(let ((e150 (and e149)))
(let ((e151 (and e111)))
(let ((e152 (ite e145 e150 e150)))
(let ((e153 (xor e151 e117)))
(let ((e154 (=> e143 e143)))
(let ((e155 (xor e153 e154)))
(let ((e156 (or e155)))
(let ((e157 (and e156)))
(let ((e158 (and e157)))
e158
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)