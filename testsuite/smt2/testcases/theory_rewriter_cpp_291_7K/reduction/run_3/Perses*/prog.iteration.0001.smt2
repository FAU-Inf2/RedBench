
(set-logic  QF_AUFBV)
(declare-fun f0 ( (_ BitVec 3)) (_ BitVec 13))
(declare-fun p0 ((_ BitVec 8) (_ BitVec 3)  ) Bool )
(declare-fun p1 (  ) Bool )
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 1))
(declare-fun a4 () (Array (_ BitVec 15) (_ BitVec 10)))
(assert
(let ((e5 (_ bv0 1)))
(let ((e6 (_ bv373 9)))
(let ((e7(_ bv1 1)))
(let ((e8 (_ bv0 1)))
(let ((e9 e6))
(let ((e10(_ bv1 1)))
(let ((e11(_ bv1 1)))
(let ((e12 e5))
(let ((e13 v3))
(let ((e14 e8))
(let ((e15 a4))
(let ((e16 (select a4 ((_ zero_extend 14) e12))))
(let ((e17 (select a4 ((_ zero_extend 1) v2))))
(let ((e18 ((_ sign_extend 14) e5)))
(let ((e19 e15))
(let ((e20 (select e15 ((_ sign_extend 14) e12))))
(let ((e21 (f0 ((_ extract 8 6) e18))))
(let ((e22 (ite (p0 ((_ extract 8 1) e9) ((_ zero_extend 2) e11))(_ bv1 1) (_ bv0 1))))
(let ((e23 e14))
(let ((e24 1))
(let ((e25 (bvnor e8 e22)))
(let ((e26 e11))
(let ((e27(_ bv1 1)))
(let ((e28(_ bv1 1)))
(let ((e29 1))
(let ((e30 1))
(let ((e31(_ bv1 1)))
(let ((e32 e19))
(let ((e33 ((_ sign_extend 0) e5)))
(let ((e34 e16))
(let ((e35 (bvcomp e33 e25)))
(let ((e36 v0))
(let ((e37 v0))
(let ((e38 e34))
(let ((e39 e34))
(let ((e40 v3))
(let ((e41 e21))
(let ((e42 v1))
(let ((e43 e26))
(let ((e44 e6))
(let ((e45 e7))
(let ((e46 e21))
(let ((e47 e9))
(let ((e48 e6))
(let ((e49 e20))
(let ((e50 e7))
(let ((e51 e18))
(let ((e52 e36))
(let ((e53 e36))
(let ((e54 e9))
(let ((e55 e28))
(let ((e56 v3))
(let ((e57 v2)) (bvsle e10 e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)