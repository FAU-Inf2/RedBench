
(set-logic  QF_AUFBV)
(declare-fun f0 ( (_ BitVec 3)) (_ BitVec 13))
(declare-fun p0 ((_ BitVec 8) (_ BitVec 3)  ) Bool )
(declare-fun p1 ((_ BitVec 5) (_ BitVec 3) (_ BitVec 12)  ) Bool )
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 1))
(declare-fun a4 () (Array (_ BitVec 15) (_ BitVec 10)))
(assert
(let ((e5 (_ bv0 1)))
(let ((e6 (_ bv373 9)))
(let ((e7 (ite (p0 ((_ sign_extend 7) v3) ((_ extract 2 0) v1))(_ bv1 1) (_ bv0 1))))
(let ((e8 (ite (p1 ((_ extract 9 5) v0) ((_ extract 2 0) v1) ((_ zero_extend 11) v3))(_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (= (_ bv1 1) ((_ extract 10 10) v2)) e6 ((_ zero_extend 2) v1))))
(let ((e10 (ite (bvule v1 ((_ zero_extend 6) v3))(_ bv1 1) (_ bv0 1))))
(let ((e11 (ite (bvugt ((_ sign_extend 13) e5) v2)(_ bv1 1) (_ bv0 1))))
(let ((e12 (bvxnor e5 e7)))
(let ((e13 (bvnor v3 e11)))
(let ((e14 (f0 ((_ sign_extend 2) e8))))
(let ((e15 (store a4 ((_ sign_extend 1) v2) ((_ sign_extend 9) e10))))
(let ((e16 (select a4 ((_ zero_extend 14) e12))))
(let ((a 0))
(let ((e18 (select e15 ((_ sign_extend 14) e5))))
(let ((a 0))
(let ((e20 (select e15 ((_ sign_extend 14) e12))))
(let ((e21 (f0 ((_ extract 8 6) e18))))
(let ((e22 (ite (p0 ((_ extract 8 1) e9) ((_ zero_extend 2) e11))(_ bv1 1) (_ bv0 1))))
(let ((e23 (bvsmod ((_ zero_extend 12) e10) e14)))
(let ((a 0))
(let ((e25 (bvnor e8 e22)))
(let ((e26 (bvshl e11 e11)))
(let ((a 0))
(let ((e28 (ite (bvslt v2 ((_ sign_extend 13) e22))(_ bv1 1) (_ bv0 1))))
(let ((e29 (ite (bvsgt e7 e25)(_ bv1 1) (_ bv0 1))))
(let ((e30 (ite (bvsge ((_ sign_extend 8) e13) e6)(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((a 0))
(let ((e33 ((_ sign_extend 0) e5)))
(let ((a 0))
(let ((e35 (bvcomp e33 e25)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e43 (bvsgt e26 e10)))
(let ((a 0))
(let ((a 0))
(let ((e46 (p1 ((_ zero_extend 4) e10) ((_ extract 7 5) e21) ((_ zero_extend 2) e18))))
(let ((a 0))
(let ((e48 (bvult e6 ((_ sign_extend 8) e30))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e54 (p1 ((_ extract 12 8) e23) ((_ extract 3 1) e9) ((_ zero_extend 11) e33))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e58 (bvsle e10 e35)))
(let ((a 0))
(let ((e60 (bvsgt ((_ zero_extend 12) e5) e21)))
(let ((e61 (distinct e30 e22)))
(let ((e62 (p0 ((_ extract 7 0) e6) ((_ extract 8 6) e20))))
(let ((a 0))
(let ((a 0))
(let ((e65 (bvult e13 e30)))
(let ((a 0))
(let ((e67 (bvule e14 ((_ sign_extend 12) e28))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e82 (bvult e28 e35)))
(let ((a 0))
(let ((e84 (bvsge e25 v3)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e94 (bvsle ((_ sign_extend 1) e6) e16)))
(let ((e95 (= e35 e29)))
(let ((e96 (and e65)))
(let ((a 0))
(let ((e98 (xor e43 e58)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e103 (ite e82 e96 e46)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e113 (or e84)))
(let ((e114 (xor e62 e67)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e123 (= e113 e54)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e127 (or e61)))
(let ((e128 (and e60)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e132 (or e48)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e136 (xor e127 e128)))
(let ((a 0))
(let ((e138 (xor e114 e103)))
(let ((e139 (= e98 e136)))
(let ((e140 (= e132 e95)))
(let ((e141 (xor e123 e94)))
(let ((e142 (= e138 e139)))
(let ((a 0))
(let ((e144 (and e141)))
(let ((e145 (xor e140 e144)))
(let ((e146 (or e142)))
(let ((e147 (and e146)))
(let ((e148 (or e147)))
(let ((e149 (or e148)))
(let ((e150 (and e149)))
(let ((a 0))
(let ((e152 (ite e145 e150 e150)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e156 (or e152)))
(let ((e157 (and e156)))
(let ((e158 (and e157)))
e158
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)