
(set-logic  QF_UFBV)
(declare-fun f0 ( (_ BitVec 5)) (_ BitVec 11))
(declare-fun f1 ( (_ BitVec 12)) (_ BitVec 8))
(declare-fun p0 ((_ BitVec 2)  ) Bool )
(declare-fun v0 () (_ BitVec 7))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v3 () (_ BitVec 12))
(declare-fun v4 () (_ BitVec 13))
(assert
(let ((e5 (_ bv49 6)))
(let ((e6 (f1 v3)))
(let ((e7 (f0 ((_ sign_extend 3) v1))))
(let ((e8 (ite (p0 ((_ sign_extend 7) v0))(_ bv1 1) (_ bv0 1))))
(let ((e9 (bvashr ((_ zero_extend 1) v0) e6)))
(let ((e10 (f0 ((_ zero_extend 3) v0))))
(let ((e11 (bvor e6 ((_ zero_extend 1) v1))))
(let ((e12 (bvadd ((_ sign_extend 4) v0) e7)))
(let ((e13 (ite (bvsgt e5 ((_ zero_extend 5) e8))(_ bv1 1) (_ bv0 1))))
(let ((e14 (ite (bvsgt v3 ((_ sign_extend 11) e13))(_ bv1 1) (_ bv0 1))))
(let ((e15 ((_ repeat 1))))
(let ((e16 (bvurem)))
(let ((e17 (( sign_extend 7))))
(let ((e18 (bvudiv v4)))
(let ((e19 (bvneg e5)))
(let ((e20 (bvsrem e6)))
(let ((e21 (( rotate_right 6))))
(let ((e22 (bvashr)))
(let ((e23 (( sign_extend 1))))
(let ((e24 (bvurem)))
(let ((e25 (bvsdiv)))
(let ((e26 (p0)))
(let ((e27 (bvuge)))
(let ((e28 (bvule)))
(let ((e29 (bvslt)))
(let ((e30 (p0)))
(let ((e31 (bvuge e24)))
(let ((e32 (bvsle e24)))
(let ((e33 (bvslt)))
(let ((e34 (=)))
(let ((e35 (bvsgt)))
(let ((e36 (bvuge)))
(let ((e37 (bvsle)))
(let ((e38 (bvugt)))
(let ((e39 (bvult)))
(let ((e40 (bvsge)))
(let ((e41 (p0)))
(let ((e42 (distinct)))
(let ((e43 (distinct e12)))
(let ((e44 (bvsle)))
(let ((e45 (bvsle)))
(let ((e46 (bvugt)))
(let ((e47 (bvsgt)))
(let ((e48 (distinct)))
(let ((e49 (bvslt)))
(let ((e50 (distinct e10)))
(let ((e51 (bvuge)))
(let ((e52 (bvugt v2)))
(let ((e53 (p0)))
(let ((e54 (bvult)))
(let ((e55 (distinct)))
(let ((e56 (bvsle e16)))
(let ((e57 (bvult e12)))
(let ((e58 (=)))
(let ((e59 (bvule)))
(let ((e60 (bvult)))
(let ((e61 (bvsgt)))
(let ((e62 (=>)))
(let ((e63 (or e40)))
(let ((e64 (xor e29)))
(let ((e65 (or e60)))
(let ((e66 (ite e52)))
(let ((e67 (xor e45)))
(let ((e68 (ite e64)))
(let ((e69 (and e33)))
(let ((e70 (and e66)))
(let ((e71 (ite e44)))
(let ((e72 (not)))
(let ((e73 (ite e67)))
(let ((e74 (not)))
(let ((e75 (not)))
(let ((e76 (ite e42)))
(let ((e77 (not)))
(let ((e78 (xor e43)))
(let ((e79 (ite e58)))
(let ((e80 (not)))
(let ((e81 (= e72)))
(let ((e82 (and e79)))
(let ((e83 (ite e70)))
(let ((e84 (ite e74)))
(let ((e85 (=>)))
(let ((e86 (=>)))
(let ((e87 (or e77)))
(let ((e88 (xor e41)))
(let ((e89 (or e84)))
(let ((e90 (not)))
(let ((e91 (=>)))
(let ((e92 (and e88)))
(let ((e93 (and e89)))
(let ((e94 (ite e93)))
(let ((e95 (ite e94)))
(let ((e96 (=>)))
(let ((e97 (and e96)))
e97
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))