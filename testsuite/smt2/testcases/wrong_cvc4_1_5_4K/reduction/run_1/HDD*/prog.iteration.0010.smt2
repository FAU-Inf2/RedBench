
(set-logic  QF_UFBV)
(declare-fun f0 ( (_ BitVec 11) (_ BitVec 4)) (_ BitVec 13))
(declare-fun f1 ( (_ BitVec 8) (_ BitVec 4)) (_ BitVec 6))
(declare-fun p0 ((_ BitVec 2) (_ BitVec 8) (_ BitVec 8)  ) Bool )
(declare-fun v0 () (_ BitVec 3))
(declare-fun v1 () (_ BitVec 1))
(declare-fun v2 () (_ BitVec 12))
(declare-fun v3 () (_ BitVec 8))
(assert
(let ((a 0))
(let ((e5 (ite (p0 ((_ extract 8 7) v2) ((_ extract 9 2) v2) ((_ sign_extend 5) v0))(_ bv1 1) (_ bv0 1))))
(let ((e6 (f0 ((_ extract 10 0) v2) ((_ sign_extend 3) e5))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e10 ((_ zero_extend 3) v2)))
(let ((e11 (bvsmod ((_ sign_extend 7) e5) v3)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e15 (ite (distinct ((_ sign_extend 7) e11) e10)(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e32 (bvsle ((_ sign_extend 7) e15) e11)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e79 (or e32)))
(let ((a 0))
(let ((e81 (not e79)))
(let ((e82 (and e81)))
e82
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)