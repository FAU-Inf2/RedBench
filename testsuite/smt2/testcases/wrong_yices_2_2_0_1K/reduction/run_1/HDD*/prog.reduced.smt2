
(set-logic  QF_UFBV)
(declare-fun f0 ( (_ BitVec 12) (_ BitVec 7) (_ BitVec 13)) (_ BitVec 14))
(declare-fun p0 ((_ BitVec 11) (_ BitVec 9) (_ BitVec 16)  ) Bool )
(declare-fun v0 () (_ BitVec 15))
(assert
(let ((e1 (_ bv722 10)))
(let ((e2 (f0 ((_ sign_extend 2) e1) ((_ extract 8 2) e1) ((_ sign_extend 3) e1))))
(let ((e3 (bvnand ((_ zero_extend 1) e2) v0)))
(let ((e4 ((_ rotate_right 0) e1)))
(let ((e5 (ite (p0 ((_ zero_extend 1) e1) ((_ extract 10 2) e2) ((_ sign_extend 6) e4))(_ bv1 1) (_ bv0 1))))
(let ((e6 (bvsge e2 ((_ sign_extend 4) e1))))
(let ((e7 (bvult e3 ((_ zero_extend 14) e5))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e12 (bvsge v0 v0)))
(let ((a 0))
(let ((e14 (bvult ((_ zero_extend 5) e1) e3)))
(let ((a 0))
(let ((e16 (bvult e4 e1)))
(let ((e17 (= e6 e14)))
(let ((e18 (xor e12)))
(let ((e19 (ite e17 e18 e7)))
(let ((e20 (xor e16)))
(let ((e21 (and e19)))
(let ((a 0))
(let ((a 0))
(let ((e24 (= e20 e21)))
(let ((a 0))
(let ((a 0))
(let ((e27 (and e24)))
(let ((e28 (and e27)))
e28
)))))))))))))))))))))))))))))
(check-sat)