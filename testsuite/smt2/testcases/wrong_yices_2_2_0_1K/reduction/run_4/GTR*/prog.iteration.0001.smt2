
(set-logic  QF_UFBV)
(declare-fun f0 ( (_ BitVec 12) (_ BitVec 7) (_ BitVec 13)) (_ BitVec 14))
(declare-fun p0 ((_ BitVec 11) (_ BitVec 9) (_ BitVec 16)  ) Bool )
(declare-fun v0 () (_ BitVec 15))
(assert
(let ((e1 (_ bv722 10)))
(let ((e2 (f0 ((_ sign_extend 2) e1) ((_ extract 8 2) e1) ((_ sign_extend 3) e1))))
(let ((e3 (bvnand ((_ zero_extend 1) e2) v0)))
(let ((e4 ((_ rotate_right 8) e1)))
(let ((e5(_ bv1 1)))
(let ((e6 (bvsge e2 ((_ sign_extend 4) e1))))
(let ((e7 (bvult e3 ((_ zero_extend 14) e5))))
(let ((e8 (bvsgt ((_ zero_extend 5) e1) e3)))
(let ((e9 (p0 ((_ sign_extend 1) e1) ((_ extract 13 5) e3) ((_ sign_extend 15) e5))))
(let ((e10 (bvult e2 e2)))
(let ((e11 (bvsle ((_ sign_extend 9) e5) e1)))
(let ((e12 (bvsge v0 v0)))
(let ((e13 (distinct ((_ sign_extend 1) e2) e3)))
(let ((e14 (bvult ((_ zero_extend 5) e1) e3)))
(let ((e15 (bvule ((_ sign_extend 5) e1) e3)))
(let ((e16 (bvult e4 e1)))
(let ((e17 e6))
(let ((e18 e8))
(let ((e19 e17))
(let ((e20 e16))
(let ((e21 e10))
(let ((e22 e9))
(let ((e23 e15))
(let ((e24 e20))
(let ((e25 e23))
(let ((e26 e25))
(let ((e27 e24))
(let ((e28 e27))
e28
)))))))))))))))))))))))))))))
(check-sat)