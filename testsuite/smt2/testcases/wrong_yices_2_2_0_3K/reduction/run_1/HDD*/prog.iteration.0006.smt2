
(set-logic  QF_UFBV)
(declare-fun p0 ((_ BitVec 3)  ) Bool )
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 10))
(declare-fun v2 () (_ BitVec 1))
(declare-fun v3 () (_ BitVec 1))
(declare-fun v4 () (_ BitVec 16))
(assert
(let ((e5 (_ bv12551 15)))
(let ((e6 (_ bv2503 13)))
(let ((e7 (ite (p0 ((_ extract 6 4) e5))(_ bv1 1) (_ bv0 1))))
(let ((e8 (ite (bvsgt e5 ((_ sign_extend 14) v2))(_ bv1 1) (_ bv0 1))))
(let ((e9 (bvsdiv ((_ sign_extend 3) e6) v4)))
(let ((e10 ((_ rotate_right 0) e6)))
(let ((a 0))
(let ((e12 ((_ repeat 2) v0)))
(let ((e13 (bvsmod ((_ zero_extend 3) v1) e10)))
(let ((a 0))
(let ((e15 (bvult v4 ((_ zero_extend 6) v1))))
(let ((a 0))
(let ((a 0))
(let ((e18 (bvslt ((_ sign_extend 3) v1) e6)))
(let ((a 0))
(let ((a 0))
(let ((e21 (bvsge e10 e13)))
(let ((a 0))
(let ((e23 (= e9 ((_ sign_extend 15) v3))))
(let ((e24 (distinct ((_ zero_extend 2) v1) e12)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e40 (= v4 ((_ zero_extend 10) v0))))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e65 (xor e21)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e69 (or e65)))
(let ((e70 (not e69)))
(let ((a 0))
(let ((a 0))
(let ((e73 (and e70)))
(let ((a 0))
(let ((e75 (or e73)))
(let ((e76 (and e75)))
e76
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)