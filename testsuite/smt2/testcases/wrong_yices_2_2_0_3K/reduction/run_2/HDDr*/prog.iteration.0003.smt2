
(set-logic  QF_UFBV)
(declare-fun p0 ((_ BitVec 3)  ) Bool )
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 10))
(declare-fun v4 () (_ BitVec 16))
(assert
(let ((e5 (_ bv12551 15)))
(let ((e6 (_ bv2503 13)))
(let ((e7 (ite (p0 ((_ extract 6 4) e5))(_ bv1 1) (_ bv0 1))))
(let ((a 0))
(let ((a 0))
(let ((e10 ((_ rotate_right 10) e6)))
(let ((a 0))
(let ((e12 ((_ repeat 2) v0)))
(let ((e13 (bvsmod ((_ zero_extend 3) v1) e10)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e19 (bvsgt ((_ zero_extend 15) e7) v4)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e26 (distinct ((_ zero_extend 3) e12) e5)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e31 (bvsle e10 e13)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e44 (ite e19 e26 e31)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e65 (xor e44)))
(let ((a 0))
(let ((a 0))
(let ((a 0))
(let ((e69 (or e65)))
(let ((e70 (not e69)))
(let ((a 0))
(let ((a 0))
(let ((e73 (and e70)))
(let ((a 0))
(let ((e75 (or e73)))
(let ((e76 (and e75)))
e76
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)